package main

import "fmt"

/**
变量生命周期
	a.变量的生命周期指的是在程序运行期间变量有效存在的时间间隔
	b.变量的生命周期与变量的作用域有着不可分割的联系：
		1.全局变量：它的生命周期和整个程序的运行周期是一致的
		2.局部变量：它的生命周期则是动态的，从创建这个变量的声明语句开始，
			到这个变量不再被引用为止
		3.形式参数和函数返回值：它们都属于局部变量，在函数被调用的时候创建，
			函数调用结束后被销毁
*/

var global *int

func IntoHeap() {
	var a int = 10
	// 局部变量指针返回给全局变量，a 被分配到heap
	global = &a
}

func IntoStack() {
	c := new(int)
	// c 作为局部变量，方法初始被分配到栈，方法结束被销毁
	*c = 1
	fmt.Println(c)
}
